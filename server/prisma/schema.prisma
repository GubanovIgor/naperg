generator client {
  provider = "prisma-client-js"
}

datasource db {
  // LL: What is SQLite?
  provider = "sqlite"
  url      = "file:./dev.db"
}

// This comes with the boilerplate.
model User {
  id                       String             @id @default(cuid())
  createdAt                DateTime           @default(now())
  updatedAt                DateTime           @updatedAt
  email                    String             @unique
  password                 String
  role                     String
  lastLogin                DateTime?
  resetPasswordToken       String
  dateResetPasswordRequest DateTime?
  validateEmailToken       String
  isEmailValidated         Boolean
  name                     String
  feeds                    Feed[] // one to many
  articles                 ArticlesOnUsers[]
  settings                 Settings?
  subscriptionPlans        SubscriptionPlan[]
}

model Feed {
  id        String    @id @default(cuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? //admin could delete
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  sources   Source[] // one to many
}

model Source {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  slug      String //url
  title     String
  deletedAt DateTime? //admin could delete
  feed      Feed      @relation(fields: [feedId], references: [id])
  feedId    String
  articles  Article[]
}

model Article {
  id           String            @id @default(cuid())
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  deletedAt    DateTime? //admin could delete
  source       Source            @relation(fields: [sourceId], references: [id])
  sourceId     String
  author       String?
  title        String
  slug         String //url
  shortContent String
  users        ArticlesOnUsers[]
}

model ArticlesOnUsers {
  user       User    @relation(fields: [userId], references: [id])
  userId     String // relation scalar field (used in the @relation attribute above)
  article    Article @relation(fields: [articleId], references: [id])
  articleId  String // relation scalar field (used in the @relation attribute above)
  isRead     Boolean @default(false)
  isFavorite Boolean @default(false)
  isHidden   Boolean @default(false)

  @@id([userId, articleId])
}

model Settings {
  id       String @id @default(cuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  language String @default("RU") // RU EN
  theme    String @default("LIGHT") // LIGHT DARK
}

model SubscriptionPlan {
  id                     String   @id @default(cuid())
  type                   String   @default("FREE") // FREE PRO PRO+ ENTEPRISE
  createdAt              DateTime @default(now())
  expirationDate         DateTime
  originalExpirationDate DateTime
  user                   User     @relation(fields: [userId], references: [id])
  userId                 String
}